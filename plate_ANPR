import cv2
from matplotlib import pyplot as plt
import numpy as np
import imutils
import pytesseract
pytesseract.pytesseract.tesseract_cmd = r"C:\Program Files (x86)\Tesseract-OCR\tesseract"

img = cv2.imread('8.jpg')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#plt.imshow(cv2.cvtColor(gray, cv2.COLOR_BGR2RGB))
cv2.imshow("gri car",gray)
cv2.waitKey(0)

bfilter = cv2.bilateralFilter(gray, 11, 17, 17) 
edged = cv2.Canny(bfilter, 30, 200) 
#plt.imshow(cv2.cvtColor(edged, cv2.COLOR_BGR2RGB))
cv2.imshow("edge",edged)
cv2.waitKey(0)

points = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(points)
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:10]

location = None
for contour in contours:
    approx = cv2.approxPolyDP(contour, 10, True)
    if len(approx) == 4:
        location = approx
        break

print(location)

mask = np.zeros(gray.shape, np.uint8)
image2 = cv2.drawContours(mask, [location], 0,255, -1)
image2 = cv2.bitwise_and(img, img, mask=mask)
#plt.imshow(cv2.cvtColor(new_image, cv2.COLOR_BGR2RGB))
cv2.imshow("aa",image2)
cv2.waitKey(0)

(x,y) = np.where(mask==255)
(a, b) = (np.min(x), np.min(y))
(e, f) = (np.max(x), np.max(y))
cropped_image = gray[a:e+1, b:f+1]
#plt.imshow(cv2.cvtColor(cropped_image, cv2.COLOR_BGR2RGB))
cv2.imshow("cropped image",cropped_image)
cv2.waitKey(0)

text = pytesseract.image_to_string(cropped_image, config='--psm 11')
print("plate is : ", text)
